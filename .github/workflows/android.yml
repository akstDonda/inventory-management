name: Build and Release APK

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to use for the release'
        required: true
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        default: 'true'
  push:
    tags:
      - 'release'

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Build APK
        run: |
          java -version
          chmod +x gradlew
          ./gradlew assembleDebug
          
      - name: Create Directory
        run: mkdir -p releases
        
      - name: Copy APK to Releases Directory
        run: cp app/build/outputs/apk/debug/app-debug.apk releases/app-v${{ github.event.inputs.tag }}${{ github.run_number }}.apk

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/*.apk
          tag_name: ${{ github.event.inputs.tag }}
          title: Release ${{ github.event.inputs.tag }}.${{ github.run_number }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Latest Release
        run: |
          echo "Updating latest release..."
          RELEASE_ID=$(jq -r .release.id ${{ steps.create_release.outputs.response }})
          echo "Release ID: $RELEASE_ID"
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID" \
            -d '{"prerelease": true}'
        if: success()
